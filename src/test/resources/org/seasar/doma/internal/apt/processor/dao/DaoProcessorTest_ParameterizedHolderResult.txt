package org.seasar.doma.internal.apt.processor.dao;

/** */
@javax.annotation.processing.Generated(value = { "Doma", "@VERSION@" }, date = "1970-01-01T09:00:00.000+0900")
public class ParameterizedHolderResultDaoImpl extends org.seasar.doma.internal.jdbc.dao.AbstractDao implements org.seasar.doma.internal.apt.processor.dao.ParameterizedHolderResultDao {

    static {
        org.seasar.doma.internal.Artifact.validateVersion("@VERSION@");
    }

    private static final java.lang.reflect.Method __method0 = org.seasar.doma.internal.jdbc.dao.AbstractDao.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.ParameterizedHolderResultDao.class, "selectSingleResult");

    private static final java.lang.reflect.Method __method1 = org.seasar.doma.internal.jdbc.dao.AbstractDao.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.ParameterizedHolderResultDao.class, "selectOptionalSingleResult");

    private static final java.lang.reflect.Method __method2 = org.seasar.doma.internal.jdbc.dao.AbstractDao.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.ParameterizedHolderResultDao.class, "selectResultList");

    private static final java.lang.reflect.Method __method3 = org.seasar.doma.internal.jdbc.dao.AbstractDao.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.ParameterizedHolderResultDao.class, "selectOptionalResultList");

    private static final java.lang.reflect.Method __method4 = org.seasar.doma.internal.jdbc.dao.AbstractDao.getDeclaredMethod(org.seasar.doma.internal.apt.processor.dao.ParameterizedHolderResultDao.class, "stream", java.util.function.Function.class);

    /** */
    public ParameterizedHolderResultDaoImpl() {
        super(new org.seasar.doma.internal.apt.processor.dao.MyConfig());
    }

    /**
     * @param connection the connection
     */
    public ParameterizedHolderResultDaoImpl(java.sql.Connection connection) {
        super(new org.seasar.doma.internal.apt.processor.dao.MyConfig(), connection);
    }

    /**
     * @param dataSource the dataSource
     */
    public ParameterizedHolderResultDaoImpl(javax.sql.DataSource dataSource) {
        super(new org.seasar.doma.internal.apt.processor.dao.MyConfig(), dataSource);
    }

    /**
     * @param config the configuration
     */
    protected ParameterizedHolderResultDaoImpl(org.seasar.doma.jdbc.Config config) {
        super(config);
    }

    /**
     * @param config the configuration
     * @param connection the connection
     */
    protected ParameterizedHolderResultDaoImpl(org.seasar.doma.jdbc.Config config, java.sql.Connection connection) {
        super(config, connection);
    }

    /**
     * @param config the configuration
     * @param dataSource the dataSource
     */
    protected ParameterizedHolderResultDaoImpl(org.seasar.doma.jdbc.Config config, javax.sql.DataSource dataSource) {
        super(config, dataSource);
    }

    @Override
    public org.seasar.doma.internal.apt.processor.dao.Height<java.lang.String> selectSingleResult() {
        entering("org.seasar.doma.internal.apt.processor.dao.ParameterizedHolderResultDaoImpl", "selectSingleResult");
        try {
            org.seasar.doma.jdbc.query.SqlTemplateSelectQuery __query = getQueryImplementors().createSqlTemplateSelectQuery(__method0);
            __query.setMethod(__method0);
            __query.setConfig(__config);
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.ParameterizedHolderResultDaoImpl");
            __query.setCallerMethodName("selectSingleResult");
            __query.setResultEnsured(false);
            __query.setResultMappingEnsured(false);
            __query.setFetchType(org.seasar.doma.FetchType.LAZY);
            __query.setQueryTimeout(-1);
            __query.setMaxRows(-1);
            __query.setFetchSize(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.prepare();
            org.seasar.doma.jdbc.command.SelectCommand<org.seasar.doma.internal.apt.processor.dao.Height<java.lang.String>> __command = getCommandImplementors().createSelectCommand(__method0, __query, new org.seasar.doma.internal.jdbc.command.ScalarSingleResultHandler<>(() -> org.seasar.doma.internal.apt.processor.dao._Height.<java.lang.String>getSingletonInternal().createScalar()));
            org.seasar.doma.internal.apt.processor.dao.Height<java.lang.String> __result = __command.execute();
            __query.complete();
            exiting("org.seasar.doma.internal.apt.processor.dao.ParameterizedHolderResultDaoImpl", "selectSingleResult", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            throwing("org.seasar.doma.internal.apt.processor.dao.ParameterizedHolderResultDaoImpl", "selectSingleResult", __e);
            throw __e;
        }
    }

    @Override
    public java.util.Optional<org.seasar.doma.internal.apt.processor.dao.Height<java.lang.String>> selectOptionalSingleResult() {
        entering("org.seasar.doma.internal.apt.processor.dao.ParameterizedHolderResultDaoImpl", "selectOptionalSingleResult");
        try {
            org.seasar.doma.jdbc.query.SqlTemplateSelectQuery __query = getQueryImplementors().createSqlTemplateSelectQuery(__method1);
            __query.setMethod(__method1);
            __query.setConfig(__config);
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.ParameterizedHolderResultDaoImpl");
            __query.setCallerMethodName("selectOptionalSingleResult");
            __query.setResultEnsured(false);
            __query.setResultMappingEnsured(false);
            __query.setFetchType(org.seasar.doma.FetchType.LAZY);
            __query.setQueryTimeout(-1);
            __query.setMaxRows(-1);
            __query.setFetchSize(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.prepare();
            org.seasar.doma.jdbc.command.SelectCommand<java.util.Optional<org.seasar.doma.internal.apt.processor.dao.Height<java.lang.String>>> __command = getCommandImplementors().createSelectCommand(__method1, __query, new org.seasar.doma.internal.jdbc.command.ScalarSingleResultHandler<>(() -> org.seasar.doma.internal.apt.processor.dao._Height.<java.lang.String>getSingletonInternal().createOptionalScalar()));
            java.util.Optional<org.seasar.doma.internal.apt.processor.dao.Height<java.lang.String>> __result = __command.execute();
            __query.complete();
            exiting("org.seasar.doma.internal.apt.processor.dao.ParameterizedHolderResultDaoImpl", "selectOptionalSingleResult", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            throwing("org.seasar.doma.internal.apt.processor.dao.ParameterizedHolderResultDaoImpl", "selectOptionalSingleResult", __e);
            throw __e;
        }
    }

    @Override
    public java.util.List<org.seasar.doma.internal.apt.processor.dao.Height<java.lang.String>> selectResultList() {
        entering("org.seasar.doma.internal.apt.processor.dao.ParameterizedHolderResultDaoImpl", "selectResultList");
        try {
            org.seasar.doma.jdbc.query.SqlTemplateSelectQuery __query = getQueryImplementors().createSqlTemplateSelectQuery(__method2);
            __query.setMethod(__method2);
            __query.setConfig(__config);
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.ParameterizedHolderResultDaoImpl");
            __query.setCallerMethodName("selectResultList");
            __query.setResultEnsured(false);
            __query.setResultMappingEnsured(false);
            __query.setFetchType(org.seasar.doma.FetchType.LAZY);
            __query.setQueryTimeout(-1);
            __query.setMaxRows(-1);
            __query.setFetchSize(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.prepare();
            org.seasar.doma.jdbc.command.SelectCommand<java.util.List<org.seasar.doma.internal.apt.processor.dao.Height<java.lang.String>>> __command = getCommandImplementors().createSelectCommand(__method2, __query, new org.seasar.doma.internal.jdbc.command.ScalarResultListHandler<>(() -> org.seasar.doma.internal.apt.processor.dao._Height.<java.lang.String>getSingletonInternal().createScalar()));
            java.util.List<org.seasar.doma.internal.apt.processor.dao.Height<java.lang.String>> __result = __command.execute();
            __query.complete();
            exiting("org.seasar.doma.internal.apt.processor.dao.ParameterizedHolderResultDaoImpl", "selectResultList", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            throwing("org.seasar.doma.internal.apt.processor.dao.ParameterizedHolderResultDaoImpl", "selectResultList", __e);
            throw __e;
        }
    }

    @Override
    public java.util.List<java.util.Optional<org.seasar.doma.internal.apt.processor.dao.Height<java.lang.String>>> selectOptionalResultList() {
        entering("org.seasar.doma.internal.apt.processor.dao.ParameterizedHolderResultDaoImpl", "selectOptionalResultList");
        try {
            org.seasar.doma.jdbc.query.SqlTemplateSelectQuery __query = getQueryImplementors().createSqlTemplateSelectQuery(__method3);
            __query.setMethod(__method3);
            __query.setConfig(__config);
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.ParameterizedHolderResultDaoImpl");
            __query.setCallerMethodName("selectOptionalResultList");
            __query.setResultEnsured(false);
            __query.setResultMappingEnsured(false);
            __query.setFetchType(org.seasar.doma.FetchType.LAZY);
            __query.setQueryTimeout(-1);
            __query.setMaxRows(-1);
            __query.setFetchSize(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.prepare();
            org.seasar.doma.jdbc.command.SelectCommand<java.util.List<java.util.Optional<org.seasar.doma.internal.apt.processor.dao.Height<java.lang.String>>>> __command = getCommandImplementors().createSelectCommand(__method3, __query, new org.seasar.doma.internal.jdbc.command.ScalarResultListHandler<>(() -> org.seasar.doma.internal.apt.processor.dao._Height.<java.lang.String>getSingletonInternal().createOptionalScalar()));
            java.util.List<java.util.Optional<org.seasar.doma.internal.apt.processor.dao.Height<java.lang.String>>> __result = __command.execute();
            __query.complete();
            exiting("org.seasar.doma.internal.apt.processor.dao.ParameterizedHolderResultDaoImpl", "selectOptionalResultList", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            throwing("org.seasar.doma.internal.apt.processor.dao.ParameterizedHolderResultDaoImpl", "selectOptionalResultList", __e);
            throw __e;
        }
    }

    @Override
    public <R> R stream(java.util.function.Function<java.util.stream.Stream<org.seasar.doma.internal.apt.processor.dao.Height<java.lang.String>>, R> callback) {
        entering("org.seasar.doma.internal.apt.processor.dao.ParameterizedHolderResultDaoImpl", "stream", callback);
        try {
            if (callback == null) {
                throw new org.seasar.doma.DomaNullPointerException("callback");
            }
            org.seasar.doma.jdbc.query.SqlTemplateSelectQuery __query = getQueryImplementors().createSqlTemplateSelectQuery(__method4);
            __query.setMethod(__method4);
            __query.setConfig(__config);
            __query.setCallerClassName("org.seasar.doma.internal.apt.processor.dao.ParameterizedHolderResultDaoImpl");
            __query.setCallerMethodName("stream");
            __query.setResultEnsured(false);
            __query.setResultMappingEnsured(false);
            __query.setFetchType(org.seasar.doma.FetchType.LAZY);
            __query.setQueryTimeout(-1);
            __query.setMaxRows(-1);
            __query.setFetchSize(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.prepare();
            org.seasar.doma.jdbc.command.SelectCommand<R> __command = getCommandImplementors().createSelectCommand(__method4, __query, new org.seasar.doma.internal.jdbc.command.ScalarStreamHandler<>(() -> org.seasar.doma.internal.apt.processor.dao._Height.<java.lang.String>getSingletonInternal().createScalar(), callback));
            R __result = __command.execute();
            __query.complete();
            exiting("org.seasar.doma.internal.apt.processor.dao.ParameterizedHolderResultDaoImpl", "stream", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            throwing("org.seasar.doma.internal.apt.processor.dao.ParameterizedHolderResultDaoImpl", "stream", __e);
            throw __e;
        }
    }

}
