package org.seasar.doma.internal.apt.dao;

/** */
@javax.annotation.processing.Generated(value = { "Doma", "@VERSION@" }, date = "1970-01-01T09:00:00.000+0900")
public class CollectorDaoImpl extends org.seasar.doma.internal.jdbc.dao.AbstractDao implements org.seasar.doma.internal.apt.dao.CollectorDao {

    static {
        org.seasar.doma.internal.Artifact.validateVersion("@VERSION@");
    }

    private static final java.lang.reflect.Method __method0 = org.seasar.doma.internal.jdbc.dao.AbstractDao.getDeclaredMethod(org.seasar.doma.internal.apt.dao.CollectorDao.class, "selectByIdAndName", java.lang.Integer.class, java.lang.String.class, java.util.stream.Collector.class);

    private static final java.lang.reflect.Method __method1 = org.seasar.doma.internal.jdbc.dao.AbstractDao.getDeclaredMethod(org.seasar.doma.internal.apt.dao.CollectorDao.class, "selectById", java.lang.Integer.class, java.util.stream.Collector.class);

    private static final java.lang.reflect.Method __method2 = org.seasar.doma.internal.jdbc.dao.AbstractDao.getDeclaredMethod(org.seasar.doma.internal.apt.dao.CollectorDao.class, "select", java.util.stream.Collector.class);

    private static final java.lang.reflect.Method __method3 = org.seasar.doma.internal.jdbc.dao.AbstractDao.getDeclaredMethod(org.seasar.doma.internal.apt.dao.CollectorDao.class, "selectWithHogeCollector", org.seasar.doma.internal.apt.dao.CollectorDao.HogeCollector.class);

    private static final java.lang.reflect.Method __method4 = org.seasar.doma.internal.jdbc.dao.AbstractDao.getDeclaredMethod(org.seasar.doma.internal.apt.dao.CollectorDao.class, "selectByIdAsMap", java.lang.Integer.class, java.util.stream.Collector.class);

    /** */
    public CollectorDaoImpl() {
        super(new org.seasar.doma.internal.apt.dao.MyConfig());
    }

    /**
     * @param connection the connection
     */
    public CollectorDaoImpl(java.sql.Connection connection) {
        super(new org.seasar.doma.internal.apt.dao.MyConfig(), connection);
    }

    /**
     * @param dataSource the dataSource
     */
    public CollectorDaoImpl(javax.sql.DataSource dataSource) {
        super(new org.seasar.doma.internal.apt.dao.MyConfig(), dataSource);
    }

    /**
     * @param config the configuration
     */
    protected CollectorDaoImpl(org.seasar.doma.jdbc.Config config) {
        super(config);
    }

    /**
     * @param config the configuration
     * @param connection the connection
     */
    protected CollectorDaoImpl(org.seasar.doma.jdbc.Config config, java.sql.Connection connection) {
        super(config, connection);
    }

    /**
     * @param config the configuration
     * @param dataSource the dataSource
     */
    protected CollectorDaoImpl(org.seasar.doma.jdbc.Config config, javax.sql.DataSource dataSource) {
        super(config, dataSource);
    }

    @Override
    public java.lang.Integer selectByIdAndName(java.lang.Integer id, java.lang.String name, java.util.stream.Collector<org.seasar.doma.internal.apt.entity.Emp, ?, java.lang.Integer> collector) {
        entering("org.seasar.doma.internal.apt.dao.CollectorDaoImpl", "selectByIdAndName", id, name, collector);
        try {
            if (collector == null) {
                throw new org.seasar.doma.DomaNullPointerException("collector");
            }
            org.seasar.doma.jdbc.query.SqlFileSelectQuery __query = getQueryImplementors().createSqlFileSelectQuery(__method0);
            __query.setMethod(__method0);
            __query.setConfig(__config);
            __query.setSqlFilePath("META-INF/org/seasar/doma/internal/apt/dao/CollectorDao/selectByIdAndName.sql");
            __query.setEntityType(org.seasar.doma.internal.apt.entity._Emp.getSingletonInternal());
            __query.addParameter("id", java.lang.Integer.class, id);
            __query.addParameter("name", java.lang.String.class, name);
            __query.setCallerClassName("org.seasar.doma.internal.apt.dao.CollectorDaoImpl");
            __query.setCallerMethodName("selectByIdAndName");
            __query.setResultEnsured(false);
            __query.setResultMappingEnsured(false);
            __query.setFetchType(org.seasar.doma.FetchType.LAZY);
            __query.setQueryTimeout(-1);
            __query.setMaxRows(-1);
            __query.setFetchSize(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.prepare();
            org.seasar.doma.jdbc.command.SelectCommand<java.lang.Integer> __command = getCommandImplementors().createSelectCommand(__method0, __query, new org.seasar.doma.internal.jdbc.command.EntityCollectorHandler<org.seasar.doma.internal.apt.entity.Emp, java.lang.Integer>(org.seasar.doma.internal.apt.entity._Emp.getSingletonInternal(), collector));
            java.lang.Integer __result = __command.execute();
            __query.complete();
            exiting("org.seasar.doma.internal.apt.dao.CollectorDaoImpl", "selectByIdAndName", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            throwing("org.seasar.doma.internal.apt.dao.CollectorDaoImpl", "selectByIdAndName", __e);
            throw __e;
        }
    }

    @Override
    public <R> R selectById(java.lang.Integer id, java.util.stream.Collector<example.holder.PhoneNumber, ?, R> collector) {
        entering("org.seasar.doma.internal.apt.dao.CollectorDaoImpl", "selectById", id, collector);
        try {
            if (collector == null) {
                throw new org.seasar.doma.DomaNullPointerException("collector");
            }
            org.seasar.doma.jdbc.query.SqlFileSelectQuery __query = getQueryImplementors().createSqlFileSelectQuery(__method1);
            __query.setMethod(__method1);
            __query.setConfig(__config);
            __query.setSqlFilePath("META-INF/org/seasar/doma/internal/apt/dao/CollectorDao/selectById.sql");
            __query.addParameter("id", java.lang.Integer.class, id);
            __query.setCallerClassName("org.seasar.doma.internal.apt.dao.CollectorDaoImpl");
            __query.setCallerMethodName("selectById");
            __query.setResultEnsured(false);
            __query.setResultMappingEnsured(false);
            __query.setFetchType(org.seasar.doma.FetchType.LAZY);
            __query.setQueryTimeout(-1);
            __query.setMaxRows(-1);
            __query.setFetchSize(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.prepare();
            org.seasar.doma.jdbc.command.SelectCommand<R> __command = getCommandImplementors().createSelectCommand(__method1, __query, new org.seasar.doma.internal.jdbc.command.HolderCollectorHandler<java.lang.String, example.holder.PhoneNumber, R>(example.holder._PhoneNumber.getSingletonInternal(), collector));
            R __result = __command.execute();
            __query.complete();
            exiting("org.seasar.doma.internal.apt.dao.CollectorDaoImpl", "selectById", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            throwing("org.seasar.doma.internal.apt.dao.CollectorDaoImpl", "selectById", __e);
            throw __e;
        }
    }

    @Override
    public <R extends java.lang.Number> R select(java.util.stream.Collector<java.lang.String, ?, R> collector) {
        entering("org.seasar.doma.internal.apt.dao.CollectorDaoImpl", "select", collector);
        try {
            if (collector == null) {
                throw new org.seasar.doma.DomaNullPointerException("collector");
            }
            org.seasar.doma.jdbc.query.SqlFileSelectQuery __query = getQueryImplementors().createSqlFileSelectQuery(__method2);
            __query.setMethod(__method2);
            __query.setConfig(__config);
            __query.setSqlFilePath("META-INF/org/seasar/doma/internal/apt/dao/CollectorDao/select.sql");
            __query.setCallerClassName("org.seasar.doma.internal.apt.dao.CollectorDaoImpl");
            __query.setCallerMethodName("select");
            __query.setResultEnsured(false);
            __query.setResultMappingEnsured(false);
            __query.setFetchType(org.seasar.doma.FetchType.LAZY);
            __query.setQueryTimeout(-1);
            __query.setMaxRows(-1);
            __query.setFetchSize(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.prepare();
            org.seasar.doma.jdbc.command.SelectCommand<R> __command = getCommandImplementors().createSelectCommand(__method2, __query, new org.seasar.doma.internal.jdbc.command.BasicCollectorHandler<java.lang.String, R>(org.seasar.doma.wrapper.StringWrapper::new, collector));
            R __result = __command.execute();
            __query.complete();
            exiting("org.seasar.doma.internal.apt.dao.CollectorDaoImpl", "select", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            throwing("org.seasar.doma.internal.apt.dao.CollectorDaoImpl", "select", __e);
            throw __e;
        }
    }

    @Override
    public java.lang.String selectWithHogeCollector(org.seasar.doma.internal.apt.dao.CollectorDao.HogeCollector collector) {
        entering("org.seasar.doma.internal.apt.dao.CollectorDaoImpl", "selectWithHogeCollector", collector);
        try {
            if (collector == null) {
                throw new org.seasar.doma.DomaNullPointerException("collector");
            }
            org.seasar.doma.jdbc.query.SqlFileSelectQuery __query = getQueryImplementors().createSqlFileSelectQuery(__method3);
            __query.setMethod(__method3);
            __query.setConfig(__config);
            __query.setSqlFilePath("META-INF/org/seasar/doma/internal/apt/dao/CollectorDao/selectWithHogeCollector.sql");
            __query.setCallerClassName("org.seasar.doma.internal.apt.dao.CollectorDaoImpl");
            __query.setCallerMethodName("selectWithHogeCollector");
            __query.setResultEnsured(false);
            __query.setResultMappingEnsured(false);
            __query.setFetchType(org.seasar.doma.FetchType.LAZY);
            __query.setQueryTimeout(-1);
            __query.setMaxRows(-1);
            __query.setFetchSize(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.prepare();
            org.seasar.doma.jdbc.command.SelectCommand<java.lang.String> __command = getCommandImplementors().createSelectCommand(__method3, __query, new org.seasar.doma.internal.jdbc.command.BasicCollectorHandler<java.lang.String, java.lang.String>(org.seasar.doma.wrapper.StringWrapper::new, collector));
            java.lang.String __result = __command.execute();
            __query.complete();
            exiting("org.seasar.doma.internal.apt.dao.CollectorDaoImpl", "selectWithHogeCollector", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            throwing("org.seasar.doma.internal.apt.dao.CollectorDaoImpl", "selectWithHogeCollector", __e);
            throw __e;
        }
    }

    @Override
    public <R> R selectByIdAsMap(java.lang.Integer id, java.util.stream.Collector<java.util.Map<java.lang.String, java.lang.Object>, ?, R> collector) {
        entering("org.seasar.doma.internal.apt.dao.CollectorDaoImpl", "selectByIdAsMap", id, collector);
        try {
            if (collector == null) {
                throw new org.seasar.doma.DomaNullPointerException("collector");
            }
            org.seasar.doma.jdbc.query.SqlFileSelectQuery __query = getQueryImplementors().createSqlFileSelectQuery(__method4);
            __query.setMethod(__method4);
            __query.setConfig(__config);
            __query.setSqlFilePath("META-INF/org/seasar/doma/internal/apt/dao/CollectorDao/selectByIdAsMap.sql");
            __query.addParameter("id", java.lang.Integer.class, id);
            __query.setCallerClassName("org.seasar.doma.internal.apt.dao.CollectorDaoImpl");
            __query.setCallerMethodName("selectByIdAsMap");
            __query.setResultEnsured(false);
            __query.setResultMappingEnsured(false);
            __query.setFetchType(org.seasar.doma.FetchType.LAZY);
            __query.setQueryTimeout(-1);
            __query.setMaxRows(-1);
            __query.setFetchSize(-1);
            __query.setSqlLogType(org.seasar.doma.jdbc.SqlLogType.FORMATTED);
            __query.prepare();
            org.seasar.doma.jdbc.command.SelectCommand<R> __command = getCommandImplementors().createSelectCommand(__method4, __query, new org.seasar.doma.internal.jdbc.command.MapCollectorHandler<R>(org.seasar.doma.MapKeyNamingType.CAMEL_CASE, collector));
            R __result = __command.execute();
            __query.complete();
            exiting("org.seasar.doma.internal.apt.dao.CollectorDaoImpl", "selectByIdAsMap", __result);
            return __result;
        } catch (java.lang.RuntimeException __e) {
            throwing("org.seasar.doma.internal.apt.dao.CollectorDaoImpl", "selectByIdAsMap", __e);
            throw __e;
        }
    }

}
